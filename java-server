#!/usr/bin/env bash

#JAVAXMS="${JAVAXMS:-64m}"
#JAVAXMX="${JAVAXMX:-128m}"
JAVAXMS=128m
JAVAXMX=128m
# echo $JAVAXMS
# echo $JAVAXMX


#JAVAPROG="${BASH_SOURCE-$0}"
#echo $JAVAPROG

#JAVASBIN="${JAVADIR}/.sbin"
# JAVASBIN=/java/.sbin
JAVACLASSPATH="${JAVADIR}/libs"
# JAVACLASSPATH=/java/libs
JAVARUN="${JAVADIR}/var/run"
# JAVARUN=/java/var/run
JAVALOGS="/logscollect"
# JAVALOGS=/java/var/logs
# echo $JAVASBIN
# echo $JAVACLASSPATH
# echo $JAVARUN
# echo $JAVALOGS


#APPID="${JAVARUN}/${APP}-${INSTANCE}.pid"
APPID="${JAVARUN}/${APP}-${PROG}.pid"
APPHEAP="${JAVARUN}/${APP}-${PROG}.heap"
# APPID=/java/var/run/app-1.pid
APPOUT="${JAVARUN}/${APP}-${PROG}.out"
# APPOUT=/java/var/run/app-1.out
APPLOG="${JAVALOGS}/${APP}-${PROG}.log"
# APPLOG=/java/var/logs/app-1.log
# echo $APPID
# echo $APPOUT
# echo $APPLOG


if [ ! -d "$JAVARUN"  -o ! -d "$JAVALOGS" ]
then
    mkdir -p "${JAVADIR}"/var/{run,logs}
fi


CLASSPATH="${APPFGDIR}:${CLASSPATH}"

for i in "${APPCLASSPATH}"/*.jar
do
    jar="$(basename ${i})"
    jars="$jar:$jars"
done
appjars=(${jars//:/ })

#cp -f "${APPFGDIR}/libs.conf" "${APPFGDIR}/.libs.conf"
#sed -e '/\r/s/.$//' "${APPFGDIR}/libs.conf" > "${APPFGDIR}/.libs.conf"
while read line
do
    if [ "$line" != "" ]
    then
        if $(echo "${appjars[@]}" |grep -wq "$line")
        then
            line="${line/#/${APPCLASSPATH}/}"
        else
            line="${line/#/${JAVACLASSPATH}/}"
        fi

        CLASSPATH="$line:$CLASSPATH"
    fi
done < "${APPFGDIR}/libs.conf"
# echo $CLASSPATH


#if [ "$JAVA_HOME" != "" ]
#then
#    JAVA="$JAVA_HOME/bin/java"
#else
#  JAVA=java
#fi
#JAVA="$JAVA_HOME/bin/java"
JAVA="/usr/local/bin/java"

if [ ! -x "${KILL:-/bin/kill}" ]
then
    KILL=/bin/kill
else
    KILL=kill
fi


case "$1" in
start)
    #echo  -e "Starting java app $APP\n mainclass: $MAINCLASS\n instance: $INSTANCE"
    echo  -e "Starting java app $APP\n mainclass: $MAINCLASS\n instance: $PROG"
    #echo -e "...add config path:${APPFGDIR}"
    if [ -f "$APPID" ]
    then
        if kill -0 `cat "$APPID"` > /dev/null 2>&1
        then
            echo $command already running as process `cat "$APPID"`.
            exit 0
        fi
    fi
  nohup "$JAVA" \
          -server -Xms"$JAVAXMS" -Xmx"$JAVAXMX" -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError \
          "-Djava.run.dir=${JAVARUN}" "-Djava.logs.dir=${JAVALOGS}" "-Djava.apps.prog=${APP}-${PROG}" \
          -classpath "$CLASSPATH" "$MAINCLASS" "$PROG" > "$APPOUT" 2>&1 < /dev/null &

    #echo "$JAVA" \
    #      -server -Xms"$JAVAXMS" -Xmx"$JAVAXMX" \
    #      "-Djava.logs.dir=${JAVALOGS}" "-Djava.apps.prog=${APP}-${INSTANCE}" \
    #      -classpath "$CLASSPATH" "$MAINCLASS" "$INSTANCE"

    #"$JAVA" \
    #      -server -Xms"$JAVAXMS" -Xmx"$JAVAXMX" \
    #      "-Djava.logs.dir=${JAVALOGS}" "-Djava.apps.prog=${APP}-${INSTANCE}" \
    #      -classpath "$CLASSPATH" "$MAINCLASS" "$INSTANCE"


    if [ $? -eq 0 ]
    then
        if /bin/echo -e "$!\n" > "$APPID"
        then
            sleep 1
            echo STARTED
            echo "pid=$!"
        else
            echo FAILED TO WRITE PID
            exit 1
        fi
    else
        echo SERVER DID NOT START
        exit 1
    fi
    ;;

stop)
    echo -e "Stopping java app $APP\n mainclass: $MAINCLASS\n instance: $PROG"

    if [ ! -f "$APPID" ]
    then
        echo "no java app $APP to stop (could not find file $APPID)"
    else
        appid=`cat "$APPID"`
        jstack $appid > "${APPHEAP/%.heap/-${appid}.heap}" 2>&1
        sleep 0.1

        $KILL -9 $(cat "$APPID")
        rm "$APPID"
        echo STOPPED
    fi
    exit 0
    ;;

sstop)
    echo -e "Stopping java app $APP\n mainclass: $MAINCLASS\n instance: $PROG"

    if [ ! -f "$APPID" ]
    then
        echo "no java app $APP to stop (could not find file $APPID)"
    else
        $KILL -15 $(cat "$APPID")
        rm "$APPID"
        echo STOPPED
    fi
    exit 0
    ;;

debug)
    shift

    echo  -e "Debuging java app $APP\n mainclass: $MAINCLASS\n instance: $PROG\n port: $1"
    nohup "$JAVA" \
          -server -Xms"$JAVAXMS" -Xmx"$JAVAXMX"  -Djava.apps.version=$VERSION \
          "-Djava.logs.dir=${JAVALOGS}" "-Djava.apps.prog=${APP}-${PROG}" \
          -Xdebug -Xrunjdwp:transport=dt_socket,server=y,address="$1",suspend=n \
          -classpath "$CLASSPATH" "$MAINCLASS" "$PROG" > "$APPOUT" 2>&1 < /dev/null &
    exit 0
    ;;
    
restart)
    shift
    "$0" stop ${@}
    sleep 3
    "$0" start ${@}
    ;;

*)
    echo $"Usage: $0 {start|stop|restart}" >&2
    exit 1
    ;;

esac
